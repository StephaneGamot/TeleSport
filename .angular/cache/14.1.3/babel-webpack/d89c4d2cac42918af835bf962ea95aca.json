{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/olympic.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@swimlane/ngx-charts\";\n\nfunction HomeComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"p\");\n    i0.ɵɵtext(2, \"Chargement en cours...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction HomeComponent_div_1_div_1_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n}\n\nfunction HomeComponent_div_1_div_1_ngx_charts_pie_chart_17_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵelement(4, \"img\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const model_r8 = ctx.model;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(model_r8.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", model_r8.value, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return [1050, 600];\n};\n\nfunction HomeComponent_div_1_div_1_ngx_charts_pie_chart_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ngx-charts-pie-chart\", 9);\n    i0.ɵɵlistener(\"select\", function HomeComponent_div_1_div_1_ngx_charts_pie_chart_17_Template_ngx_charts_pie_chart_select_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r9.onChartClick($event));\n    });\n    i0.ɵɵtemplate(1, HomeComponent_div_1_div_1_ngx_charts_pie_chart_17_ng_template_1_Template, 6, 2, \"ng-template\", null, 10, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r6 = i0.ɵɵreference(2);\n\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"results\", ctx_r4.chartData)(\"view\", i0.ɵɵpureFunction0(9, _c0))(\"legend\", false)(\"labels\", true)(\"trimLabels\", false)(\"animations\", false)(\"autoScale\", true)(\"tooltipTemplate\", _r6)(\"tooltipText\", ctx_r4.tooltipText);\n  }\n}\n\nfunction HomeComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"h1\");\n    i0.ɵɵtext(3, \"Medals per Country\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\");\n    i0.ɵɵtext(7, \"Number of JOs\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\");\n    i0.ɵɵtext(12, \"Number of countries\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 6);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(15, HomeComponent_div_1_div_1_div_15_Template, 1, 0, \"div\", 7);\n    i0.ɵɵpipe(16, \"async\");\n    i0.ɵɵtemplate(17, HomeComponent_div_1_div_1_ngx_charts_pie_chart_17_Template, 3, 10, \"ngx-charts-pie-chart\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate(ctx_r2.numberOfJOs);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r2.numberOfCountries);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(16, 4, ctx_r2.olympics$));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.chartData);\n  }\n}\n\nfunction HomeComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, HomeComponent_div_1_div_1_Template, 18, 6, \"div\", 0);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isLoading);\n  }\n}\n\nexport class HomeComponent {\n  constructor(olympicService, router) {\n    this.olympicService = olympicService;\n    this.router = router;\n    this.isLoading = true; // Ajout de l'indicateur de chargement\n\n    this.chartData = []; // Stocke les données transformées pour le diagramme\n\n    this.numberOfJOs = 0;\n    this.numberOfCountries = 0;\n\n    this.tooltipText = item => {\n      const label = item.data.name;\n      const val = item.data.value;\n      return `${label} ${val}`;\n    };\n  } // Le constructeur est utilisé pour l'injection de dépendances.\n\n\n  ngOnInit() {\n    this.olympics$ = this.olympicService.getOlympics().pipe(map(countries => {\n      if (countries) {\n        this.numberOfJOs = this.calculateNumberOfJOs(countries);\n        this.numberOfCountries = countries.length;\n        this.chartData = countries.map(country => ({\n          name: country.country,\n          value: country.participations.reduce((total, participation) => total + participation.medalsCount, 0)\n        }));\n      }\n\n      return countries || [];\n    }));\n  }\n\n  calculateNumberOfJOs(countries) {\n    const yearsOfJOs = [];\n    countries.forEach(olympic => {\n      olympic.participations.forEach(participation => {\n        if (!yearsOfJOs.includes(participation.year)) {\n          yearsOfJOs.push(participation.year);\n        }\n      });\n    });\n    return yearsOfJOs.length;\n  }\n\n  onChartClick(event) {\n    if (event && event.name) {\n      this.router.navigate([`/details/${event.name}`]);\n    }\n  }\n\n}\n\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.OlympicService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"homePage\", 4, \"ngIf\"], [1, \"homePage\"], [1, \"pageTitle\"], [1, \"pageAllSubtitles\"], [1, \"pageSubtitle\"], [1, \"numberOfSubtitle\"], [4, \"ngFor\", \"ngForOf\"], [3, \"results\", \"view\", \"legend\", \"labels\", \"trimLabels\", \"animations\", \"autoScale\", \"tooltipTemplate\", \"tooltipText\", \"select\", 4, \"ngIf\"], [3, \"results\", \"view\", \"legend\", \"labels\", \"trimLabels\", \"animations\", \"autoScale\", \"tooltipTemplate\", \"tooltipText\", \"select\"], [\"tooltipTemplate\", \"\"], [1, \"tooltip\"], [1, \"tooltipCenter\"], [\"src\", \"/assets/img/award-solid-white.svg\", \"alt\", \"award\", 1, \"white-icon\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, HomeComponent_div_0_Template, 3, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, HomeComponent_div_1_Template, 2, 1, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.PieChartComponent, i3.AsyncPipe],\n  styles: [\".homePage[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.tooltip[_ngcontent-%COMP%] {\\n  background-color: #03838f;\\n  padding: 5px;\\n  font-family: Arial, Helvetica, sans-serif;\\n  border-radius: 10px;\\n  font-size: 1rem;\\n}\\n\\n.tooltipCenter[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.white-icon[_ngcontent-%COMP%] {\\n  width: 9px;\\n  height: 16px;\\n  margin-right: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhvbWUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQyxhQUFBO0VBQ0Esc0JBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBQ0Q7O0FBRUE7RUFDQyx5QkFBQTtFQUNBLFlBQUE7RUFDQSx5Q0FBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQUNEOztBQUVBO0VBQ0MsYUFBQTtFQUNBLG1CQUFBO0FBQ0Q7O0FBRUE7RUFDQyxVQUFBO0VBQ0EsWUFBQTtFQUNBLGlCQUFBO0FBQ0QiLCJmaWxlIjoiaG9tZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5ob21lUGFnZSB7XG5cdGRpc3BsYXk6IGZsZXg7XG5cdGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG5cdGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXHRhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4udG9vbHRpcCB7XG5cdGJhY2tncm91bmQtY29sb3I6ICMwMzgzOGY7XG5cdHBhZGRpbmc6IDVweDtcblx0Zm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XG5cdGJvcmRlci1yYWRpdXM6IDEwcHg7XG5cdGZvbnQtc2l6ZTogMXJlbTtcbn1cblxuLnRvb2x0aXBDZW50ZXIge1xuXHRkaXNwbGF5OiBmbGV4OyBcblx0YWxpZ24taXRlbXM6IGNlbnRlcjsgXG59XG5cbi53aGl0ZS1pY29uIHtcblx0d2lkdGg6IDlweDtcblx0aGVpZ2h0OiAxNnB4O1xuXHRtYXJnaW4tcmlnaHQ6IDVweDtcblx0XG59XG5cbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"AAIA,SAASA,GAAT,QAAoB,gBAApB;;;;;;;;;ICJAC,4BAAuB,CAAvB,EAAuB,GAAvB;IACIA;IAAsBA;;;;;;IAiBzBA;;;;;;IAeEA,gCAAqB,CAArB,EAAqB,KAArB;IACMA;IAAgBA;IAErBA;IACCA;IACAA;IACDA;;;;;IALKA;IAAAA;IAIJA;IAAAA;;;;;;;;;;;;IAlBJA;IAWCA;MAAAA;MAAA;MAAA,OAAUA,2CAAV;IAA8B,CAA9B;IACAA;IAUDA;;;;;;;IApBCA,2CAAqB,MAArB,EAAqBA,0BAArB,EAAqB,QAArB,EAAqB,KAArB,EAAqB,QAArB,EAAqB,IAArB,EAAqB,YAArB,EAAqB,KAArB,EAAqB,YAArB,EAAqB,KAArB,EAAqB,WAArB,EAAqB,IAArB,EAAqB,iBAArB,EAAqBC,GAArB,EAAqB,aAArB,EAAqBC,kBAArB;;;;;;IAlBDF,4BAAwB,CAAxB,EAAwB,KAAxB,EAAwB,CAAxB,EAAwB,CAAxB,EAAwB,IAAxB;IAE2BA;IAAkBA;IAE7CA,+BAA8B,CAA9B,EAA8B,KAA9B,EAA8B,CAA9B,EAA8B,CAA9B,EAA8B,KAA9B;IAEOA;IAAaA;IAAOA;IAA8BA;IAAiBA;IAGzEA,gCAA0B,EAA1B,EAA0B,KAA1B;IACMA;IAAmBA;IACrBA;IAA8BA;IAAuBA;IAG1DA;;IAEAA;IAyBDA;;;;;IAnC0DA;IAAAA;IAKtBA;IAAAA;IAGVA;IAAAA;IAGvBA;IAAAA;;;;;;IAlBHA;IACCA;IA0CDA;;;;;IA1COA;IAAAA;;;;ADUP,OAAM,MAAOG,aAAP,CAAoB;EAQxBC,YAAoBC,cAApB,EAA4DC,MAA5D,EAA0E;IAAtD;IAAwC;IAPrD,iBAAqB,IAArB,CAOmE,CAP5B;;IAEvC,iBAAmB,EAAnB,CAKmE,CAL3C;;IAE/B,mBAAsB,CAAtB;IACA,yBAA4B,CAA5B;;IAuCA,mBAAeC,IAAD,IAAsB;MAClC,MAAMC,KAAK,GAAGD,IAAI,CAACE,IAAL,CAAUC,IAAxB;MACA,MAAMC,GAAG,GAAGJ,IAAI,CAACE,IAAL,CAAUG,KAAtB;MACA,OAAO,GAAGJ,KAAK,IAAIG,GAAG,EAAtB;IACD,CAJD;EArC8E,CARtD,CAQ8D;;;EAEtFE,QAAQ;IACN,KAAKC,SAAL,GAAiB,KAAKT,cAAL,CAAoBU,WAApB,GAAkCC,IAAlC,CACfjB,GAAG,CAAEkB,SAAD,IAAuC;MACzC,IAAIA,SAAJ,EAAe;QACb,KAAKC,WAAL,GAAmB,KAAKC,oBAAL,CAA0BF,SAA1B,CAAnB;QACA,KAAKG,iBAAL,GAAyBH,SAAS,CAACI,MAAnC;QACA,KAAKC,SAAL,GAAiBL,SAAS,CAAClB,GAAV,CAAewB,OAAD,KAAc;UAC3Cb,IAAI,EAAEa,OAAO,CAACA,OAD6B;UAE3CX,KAAK,EAAEW,OAAO,CAACC,cAAR,CAAuBC,MAAvB,CAA8B,CAACC,KAAD,EAAQC,aAAR,KAA0BD,KAAK,GAAGC,aAAa,CAACC,WAA9E,EAA2F,CAA3F;QAFoC,CAAd,CAAd,CAAjB;MAID;;MACD,OAAOX,SAAS,IAAI,EAApB;IACD,CAVE,CADY,CAAjB;EAcD;;EAEOE,oBAAoB,CAACF,SAAD,EAA4B;IACtD,MAAMY,UAAU,GAAa,EAA7B;IACAZ,SAAS,CAACa,OAAV,CAAmBC,OAAD,IAAY;MAC5BA,OAAO,CAACP,cAAR,CAAuBM,OAAvB,CAAgCH,aAAD,IAAkB;QAC/C,IAAI,CAACE,UAAU,CAACG,QAAX,CAAoBL,aAAa,CAACM,IAAlC,CAAL,EAA8C;UAC5CJ,UAAU,CAACK,IAAX,CAAgBP,aAAa,CAACM,IAA9B;QACD;MACF,CAJD;IAKD,CAND;IAOA,OAAOJ,UAAU,CAACR,MAAlB;EACD;;EAEDc,YAAY,CAACC,KAAD,EAAW;IACrB,IAAIA,KAAK,IAAIA,KAAK,CAAC1B,IAAnB,EAAyB;MACvB,KAAKJ,MAAL,CAAY+B,QAAZ,CAAqB,CAAC,YAAYD,KAAK,CAAC1B,IAAI,EAAvB,CAArB;IACD;EACF;;AA3CuB;;;mBAAbP,eAAaH;AAAA;;;QAAbG;EAAamC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCd1B1C;MAGAA;;;;MAHMA;MAGiBA;MAAAA","names":["map","i0","_r6","ctx_r4","HomeComponent","constructor","olympicService","router","item","label","data","name","val","value","ngOnInit","olympics$","getOlympics","pipe","countries","numberOfJOs","calculateNumberOfJOs","numberOfCountries","length","chartData","country","participations","reduce","total","participation","medalsCount","yearsOfJOs","forEach","olympic","includes","year","push","onChartClick","event","navigate","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/papa/Desktop/WhiteWolfWeb/PROJET-OCR-JAVA-ANGULAR/OCR-JAVA-ANGULAR-P2/TeleSport/src/app/pages/home/home.component.ts","/Users/papa/Desktop/WhiteWolfWeb/PROJET-OCR-JAVA-ANGULAR/OCR-JAVA-ANGULAR-P2/TeleSport/src/app/pages/home/home.component.html"],"sourcesContent":["import { Component, OnInit} from '@angular/core';              // Importe les décorateurs 'Component' et 'OnInit' d'Angular Core.\nimport { Observable } from 'rxjs';                          // Importe 'Observable' de la bibliothèque RxJS pour la gestion des données asynchrones.\nimport { OlympicService } from 'src/app/core/services/olympic.service';\nimport { OlympicCountry } from 'src/app/core/models/Olympic';   // Importe l'interface 'OlympicCountry' pour définir la structure des données olympiques.\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router'; \nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-home',                                         // Sélecteur CSS pour utiliser ce composant.   Utilisé dans le HTML comme <app-home></app-home>.\n  templateUrl: './home.component.html',                         // Chemin vers le fichier de template HTML de ce composant\n  styleUrls: ['./home.component.scss'],                         // Chemin(s) vers le(s) fichier(s) de style CSS/SCSS de ce composant.\n})\n\nexport class HomeComponent implements OnInit {                  // Déclaration de la classe du composant 'HomeComponent'.\n  public isLoading: boolean = true;             // Ajout de l'indicateur de chargement\n  public olympics$: Observable<OlympicCountry[] | null> | undefined;  // Déclaration d'une propriété publique 'olympics$'. C'est un Observable qui émettra soit un tableau de 'OlympicCountry', soit 'null'. Peut être 'undefined' initialement.\n  public chartData: any[] = [];  // Stocke les données transformées pour le diagramme\n  public tooltipTemplate: any; // Assurez-vous de déclarer la propriété tooltipTemplate.\n  numberOfJOs: number = 0;\n  numberOfCountries: number = 0;\n\n  constructor(private olympicService: OlympicService, private router: Router) {}        // Le constructeur est utilisé pour l'injection de dépendances.\n\n  ngOnInit(): void {\n    this.olympics$ = this.olympicService.getOlympics().pipe(\n      map((countries: OlympicCountry[] | null) => {\n        if (countries) {\n          this.numberOfJOs = this.calculateNumberOfJOs(countries);\n          this.numberOfCountries = countries.length;\n          this.chartData = countries.map((country) => ({\n            name: country.country,\n            value: country.participations.reduce((total, participation) => total + participation.medalsCount, 0),\n          }));\n        }\n        return countries || [];\n      }),\n      \n    );\n  }\n\n  private calculateNumberOfJOs(countries: OlympicCountry[]): number {\n    const yearsOfJOs: number[] = [];\n    countries.forEach((olympic) => {\n      olympic.participations.forEach((participation) => {\n        if (!yearsOfJOs.includes(participation.year)) {\n          yearsOfJOs.push(participation.year);\n        }\n      });\n    });\n    return yearsOfJOs.length;\n  }\n  \n  onChartClick(event: any): void {\n    if (event && event.name) {\n      this.router.navigate([`/details/${event.name}`]);\n    }\n  }\n\n  tooltipText = (item: any): string => {\n    const label = item.data.name;\n    const val = item.data.value;\n    return `${label} ${val}`;\n  };\n}\n\n/*\n\n* Décorateur @Component : Définit les métadonnées du composant, telles que le template HTML, le style, et le sélecteur.\n* Classe du Composant : Définit le comportement du composant, incluant les propriétés et les méthodes.\n*\tObservable olympics$ : Gère les données asynchrones des pays olympiques.\n*\tInjection de OlympicService : Fournit les données nécessaires au composant\n* ngOnInit : Initialise le composant en s'abonnant aux données olympiques\n\n* Le symbole $ après le nom olympics dans olympics$ est une convention de nommage couramment utilisée dans la communauté Angular et RxJS pour indiquer qu'une variable est un Observable.\n\n* HomeComponent, l'ajout de la gestion ngOnDestroy n'est pas nécessaire si vous n'avez pas de souscriptions manuelles à des observables. \n  En effet, l'utilisation de l'observable olympics$ directement dans le template avec l'opérateur async dans Angular gère automatiquement les souscriptions et désabonnements pour vous.\n\nCe composant, en résumé, est conçu pour afficher des données olympiques en s'abonnant à un service qui les fournit via un Observable.\n\n*/","<div *ngIf=\"isLoading\">\n\t<p>Chargement en cours...</p>\n</div>\n<div class=\"homePage\" *ngIf=\"!isLoading\">\n\t<div *ngIf=\"!isLoading\">\n\t\t\n\t<div class=\"pageTitle\"><h1>Medals per Country</h1></div>\n\n\t<div class=\"pageAllSubtitles\">\n\t\t<div class=\"pageSubtitle\">\n\t\t\t<div>Number of JOs</div> <div class=\"numberOfSubtitle\">{{ numberOfJOs }}</div>\n\t\t</div>\n\n\t\t<div class=\"pageSubtitle\">\n\t\t\t<div>Number of countries</div> \n      <div class=\"numberOfSubtitle\">{{ numberOfCountries }}</div>\n\t\t</div>\n\t</div>\n\t<div *ngFor=\"let country of olympics$ | async\"></div>\n\n\t<ngx-charts-pie-chart\n\t\t*ngIf=\"chartData\"\n\t\t[results]=\"chartData\"\n\t\t[view]=\"[1050, 600]\"\n\t\t[legend]=\"false\"\n\t\t[labels]=\"true\"\n\t\t[trimLabels]=\"false\"\n\t\t[animations]=\"false\"\n\t\t[autoScale]=\"true\"\n\t\t[tooltipTemplate]=\"tooltipTemplate\"\n\t\t[tooltipText]=\"tooltipText\"\n\t\t(select)=\"onChartClick($event)\">\n\t\t<ng-template #tooltipTemplate let-model=\"model\">\n\t\t\t<div class=\"tooltip\">\n\t\t\t\t<div>{{ model.name }}</div>\n\n\t\t\t\t<div class=\"tooltipCenter\">\n\t\t\t\t\t<img src=\"/assets/img/award-solid-white.svg\" alt=\"award\" class=\"white-icon\" /> \n\t\t\t\t\t{{ model.value }}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ng-template>\n\t</ngx-charts-pie-chart>\n\n\n</div>\n</div>\n\n<!--L'expression let country of (olympics$ | async) crée une variable locale country pour chaque itération, \n    qui représente l'objet courant du tableau olympics$.-->\n"]},"metadata":{},"sourceType":"module"}